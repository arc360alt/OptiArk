name: Package OptiArk Minecraft Folders

on:
  workflow_dispatch:
    inputs:
      artifact_name:
        description: 'Artifact name for the packages'
        required: true
        default: 'optiark-packages'
        type: string

jobs:
  package-folders:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Create packages directory
      run: mkdir -p packages
    
    - name: Find and package minecraft folders
      run: |
        # Find all directories that match the OptiArk pattern
        for dir in OptiArk.*; do
          if [ -d "$dir" ]; then
            echo "Processing directory: $dir"
            
            # Check if minecraft folder exists in this directory
            if [ -d "$dir/minecraft" ]; then
              echo "Found minecraft folder in $dir"
              
              # Create zip file named after the parent directory
              cd "$dir"
              zip -r "../packages/${dir}.zip" minecraft/
              cd ..
              
              echo "Created ${dir}.zip"
            else
              echo "No minecraft folder found in $dir"
            fi
          fi
        done
    
    - name: List created packages
      run: |
        echo "Created packages:"
        ls -la packages/
        
        # Create a manifest file with package info
        echo "# OptiArk Packages Manifest" > packages/MANIFEST.md
        echo "" >> packages/MANIFEST.md
        echo "Generated on: $(date)" >> packages/MANIFEST.md
        echo "Workflow run: ${{ github.run_id }}" >> packages/MANIFEST.md
        echo "" >> packages/MANIFEST.md
        echo "## Available Packages:" >> packages/MANIFEST.md
        
        total_size=0
        for zip_file in packages/*.zip; do
          if [ -f "$zip_file" ]; then
            filename=$(basename "$zip_file")
            size=$(stat -f%z "$zip_file" 2>/dev/null || stat -c%s "$zip_file" 2>/dev/null || echo "0")
            size_mb=$((size / 1024 / 1024))
            total_size=$((total_size + size))
            echo "- **$filename** (${size_mb}MB)" >> packages/MANIFEST.md
          fi
        done
        
        total_mb=$((total_size / 1024 / 1024))
        echo "" >> packages/MANIFEST.md
        echo "**Total size:** ${total_mb}MB" >> packages/MANIFEST.md
    
    - name: Check if packages were created
      run: |
        if [ -z "$(ls -A packages/*.zip 2>/dev/null)" ]; then
          echo "No packages were created. Exiting."
          exit 1
        fi
    
    - name: Upload packages as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.inputs.artifact_name }}
        path: packages/
        retention-days: 30
        compression-level: 0  # Don't compress since we already have zip files
    
    - name: Create release instructions
      run: |
        echo "## ðŸ“¦ Packages Ready!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Your OptiArk packages have been created and uploaded as artifacts." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### What's included:" >> $GITHUB_STEP_SUMMARY
        for zip_file in packages/*.zip; do
          if [ -f "$zip_file" ]; then
            filename=$(basename "$zip_file")
            size=$(stat -f%z "$zip_file" 2>/dev/null || stat -c%s "$zip_file" 2>/dev/null || echo "0")
            size_mb=$((size / 1024 / 1024))
            echo "- \`$filename\` (${size_mb}MB)" >> $GITHUB_STEP_SUMMARY
          fi
        done
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. Download the artifact from this workflow run" >> $GITHUB_STEP_SUMMARY
        echo "2. Use a release bot or manually create a release" >> $GITHUB_STEP_SUMMARY
        echo "3. Upload the zip files to the release" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Artifact name:** \`${{ github.event.inputs.artifact_name }}\`" >> $GITHUB_STEP_SUMMARY
